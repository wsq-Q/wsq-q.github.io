<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据删除</title>
      <link href="/2025/02/01/%E6%95%B0%E6%8D%AE%E5%88%A0%E9%99%A4/"/>
      <url>/2025/02/01/%E6%95%B0%E6%8D%AE%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<h5 id="简要描述"><a href="#简要描述" class="headerlink" title="简要描述"></a>简要描述</h5><ul><li>通过键值内容，统计匹配的数据并删除，每次删除10000条数据</li></ul><h5 id="请求URL"><a href="#请求URL" class="headerlink" title="请求URL"></a>请求URL</h5><ul><li><code>http://xx.com/del_data/</code></li></ul><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><ul><li>GET</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><table><thead><tr><th align="left">参数名</th><th align="left">必选</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">dtype</td><td align="left">是</td><td align="left">string</td><td>日志类型</td></tr><tr><td align="left">key</td><td align="left">是</td><td align="left">string</td><td>聚合关键字</td></tr><tr><td align="left">value</td><td align="left">是</td><td align="left">string</td><td>聚合关键值</td></tr><tr><td align="left">stime</td><td align="left">是</td><td align="left">string</td><td>起始时间例2025-01-11T00:00:00.971Z</td></tr><tr><td align="left">etime</td><td align="left">是</td><td align="left">string</td><td>结束时间</td></tr></tbody></table><h5 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h5><pre class="language-none"><code class="language-none">&#123;    &quot;del_num&quot;: 10000,    &quot;status&quot;: &quot;over&quot;,    &quot;time&quot;: &quot;Thu, 09 Jan 2025 15:17:52 GMT&quot;&#125;</code></pre><h5 id="返回参数说明"><a href="#返回参数说明" class="headerlink" title="返回参数说明"></a>返回参数说明</h5><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">groupid</td><td align="left">int</td><td>用户组id，1：超级管理员；2：普通用户</td></tr></tbody></table><h5 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h5><ul><li>更多返回错误代码请看首页的错误代码描述</li></ul>]]></content>
      
      
      <categories>
          
          <category> 接口 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据时间分布统计</title>
      <link href="/2025/02/01/%E6%95%B0%E6%8D%AE%E6%97%B6%E9%97%B4%E5%88%86%E5%B8%83%E7%BB%9F%E8%AE%A1/"/>
      <url>/2025/02/01/%E6%95%B0%E6%8D%AE%E6%97%B6%E9%97%B4%E5%88%86%E5%B8%83%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h5 id="简要描述"><a href="#简要描述" class="headerlink" title="简要描述"></a>简要描述</h5><ul><li>通过键值内容，统计匹配的数据日期分布情况</li></ul><h5 id="请求URL"><a href="#请求URL" class="headerlink" title="请求URL"></a>请求URL</h5><ul><li><code>http://xx.com/statistics/date/</code></li></ul><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><ul><li>GET</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><table><thead><tr><th align="left">参数名</th><th align="left">必选</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">dtype</td><td align="left">是</td><td align="left">string</td><td>日志类型</td></tr><tr><td align="left">key</td><td align="left">是</td><td align="left">string</td><td>聚合关键字</td></tr><tr><td align="left">value</td><td align="left">是</td><td align="left">string</td><td>聚合关键值</td></tr><tr><td align="left">stime</td><td align="left">是</td><td align="left">string</td><td>起始时间例2025-01-11T00:00:00.971Z</td></tr><tr><td align="left">etime</td><td align="left">是</td><td align="left">string</td><td>结束时间</td></tr></tbody></table><h5 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h5><pre class="language-none"><code class="language-none">[    &#123;        &quot;count&quot;: 102,        &quot;date&quot;: &quot;2025-01-07&quot;    &#125;,    &#123;        &quot;count&quot;: 121,        &quot;date&quot;: &quot;2025-01-08&quot;    &#125;]</code></pre><h5 id="返回参数说明"><a href="#返回参数说明" class="headerlink" title="返回参数说明"></a>返回参数说明</h5><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">groupid</td><td align="left">int</td><td>用户组id，1：超级管理员；2：普通用户</td></tr></tbody></table><h5 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h5><ul><li>更多返回错误代码请看首页的错误代码描述</li></ul>]]></content>
      
      
      <categories>
          
          <category> 接口 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日志检索</title>
      <link href="/2025/02/01/%E6%97%A5%E5%BF%97%E6%A3%80%E7%B4%A2/"/>
      <url>/2025/02/01/%E6%97%A5%E5%BF%97%E6%A3%80%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h5 id="简要描述"><a href="#简要描述" class="headerlink" title="简要描述"></a>简要描述</h5><ul><li>日志检索</li></ul><h5 id="请求URL"><a href="#请求URL" class="headerlink" title="请求URL"></a>请求URL</h5><ul><li><code>http://xx.com/search/</code></li></ul><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><ul><li>GET</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><table><thead><tr><th align="left">参数名</th><th align="left">必选</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">dtype</td><td align="left">是</td><td align="left">string</td><td>日志类型</td></tr><tr><td align="left">stime</td><td align="left">是</td><td align="left">string</td><td>起始时间例2025-01-11T00:00:00.971Z</td></tr><tr><td align="left">etime</td><td align="left">是</td><td align="left">string</td><td>结束时间</td></tr><tr><td align="left">sip</td><td align="left">否</td><td align="left">string</td><td>源ip检索</td></tr><tr><td align="left">dip</td><td align="left">否</td><td align="left">string</td><td>目标ip检索</td></tr><tr><td align="left">page</td><td align="left">是</td><td align="left">string</td><td>页码</td></tr><tr><td align="left">limit</td><td align="left">是</td><td align="left">string</td><td>条数</td></tr></tbody></table><h5 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h5><pre class="language-none"><code class="language-none"> &#123;    &quot;data&quot;: [        &#123;            &quot;_id&quot;: &quot;AZRJHDKvaQJO78oCbm29&quot;,            &quot;_index&quot;: &quot;original-attack2-2025.01.09&quot;,            &quot;_score&quot;: null,            &quot;_source&quot;: &#123;                &quot;@timestamp&quot;: &quot;2025-01-09T03:29:32.131Z&quot;,                &quot;@version&quot;: &quot;1&quot;,                &quot;Action&quot;: &quot;PERMIT&quot;,                &quot;Content&quot;: &quot;POLICY*: The packet was through because the firewall policy is permit&quot;,                &quot;DIP&quot;: &quot;10.21.4.1&quot;,                &quot;DstIP&quot;: &quot;10.21.4.1&quot;,                &quot;FwPolicyID&quot;: &quot;1&quot;,                &quot;GenTime&quot;: &quot;2025-01-09 11:28:14&quot;,                &quot;InInterface&quot;: &quot;ge0&#x2F;0&quot;,                &quot;OutInterface&quot;: &quot;ge0&#x2F;1&quot;,                &quot;Protocol&quot;: &quot;ICMP&quot;,                &quot;SIP&quot;: &quot;10.21.4.206&quot;,                &quot;SerialNum&quot;: &quot;101Y3-15A5O-1F001-1F223-YLS1K&quot;,                &quot;SrcIP&quot;: &quot;10.21.4.206&quot;,                &quot;code&quot;: &quot;0&quot;,                &quot;geoip&quot;: &#123;&#125;,                &quot;host&quot;: &quot;10.21.4.161&quot;,                &quot;logsource&quot;: &quot;host&quot;,                &quot;program&quot;: &quot;FILTER&quot;,                &quot;severity&quot;: &quot;6&quot;,                &quot;severity_label&quot;: &quot;info&quot;,                &quot;tags&quot;: [                    &quot;_geoip_lookup_failure&quot;                ],                &quot;timestamp&quot;: &quot;Jan  9 11:28:14&quot;,                &quot;type&quot;: &quot;8&quot;            &#125;,            &quot;_type&quot;: &quot;8&quot;,            &quot;sort&quot;: [                1736393372131            ]        &#125;    ],    &quot;limit&quot;: &quot;1&quot;,    &quot;page&quot;: &quot;1&quot;,    &quot;total&quot;: 54&#125;</code></pre><h5 id="返回参数说明"><a href="#返回参数说明" class="headerlink" title="返回参数说明"></a>返回参数说明</h5><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">groupid</td><td align="left">int</td><td>用户组id，1：超级管理员；2：普通用户</td></tr></tbody></table><h5 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h5><ul><li>更多返回错误代码请看首页的错误代码描述</li></ul>]]></content>
      
      
      <categories>
          
          <category> 接口 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日志类型统计</title>
      <link href="/2025/02/01/%E6%97%A5%E5%BF%97%E7%B1%BB%E5%9E%8B%E7%BB%9F%E8%AE%A1/"/>
      <url>/2025/02/01/%E6%97%A5%E5%BF%97%E7%B1%BB%E5%9E%8B%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h5 id="简要描述"><a href="#简要描述" class="headerlink" title="简要描述"></a>简要描述</h5><ul><li>日志类型统计，统计一定时间范围内，每个类型日志的数量</li></ul><h5 id="请求URL"><a href="#请求URL" class="headerlink" title="请求URL"></a>请求URL</h5><ul><li><code>http://xx.com/statistics/key/</code></li></ul><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><ul><li>GET</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><table><thead><tr><th align="left">参数名</th><th align="left">必选</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">dtype</td><td align="left">否</td><td align="left">string</td><td>日志类型</td></tr><tr><td align="left">key</td><td align="left">否</td><td align="left">string</td><td>按照该关键字统计</td></tr><tr><td align="left">stime</td><td align="left">是</td><td align="left">string</td><td>起始时间例2025-01-11T00:00:00.971Z</td></tr><tr><td align="left">etime</td><td align="left">是</td><td align="left">string</td><td>结束时间</td></tr></tbody></table><h5 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h5><pre class="language-none"><code class="language-none">[    &#123;        &quot;count&quot;: 1067556,        &quot;name&quot;: &quot;FILTER&quot;    &#125;,    &#123;        &quot;count&quot;: 711418,        &quot;name&quot;: &quot;APP_POLICY&quot;    &#125;,    &#123;        &quot;count&quot;: 30734,        &quot;name&quot;: &quot;WEB_ACCESS&quot;    &#125;,    &#123;        &quot;count&quot;: 17971,        &quot;name&quot;: &quot;SYSTEM_INFO&quot;    &#125;,    &#123;        &quot;count&quot;: 255,        &quot;name&quot;: &quot;CONFIG&quot;    &#125;,    &#123;        &quot;count&quot;: 200,        &quot;name&quot;: &quot;WEB_VISITED&quot;    &#125;,    &#123;        &quot;count&quot;: 107,        &quot;name&quot;: &quot;APP_TRAFFIC&quot;    &#125;,    &#123;        &quot;count&quot;: 63,        &quot;name&quot;: &quot;APP_CATEG&quot;    &#125;,    &#123;        &quot;count&quot;: 62,        &quot;name&quot;: &quot;FLOOD&quot;    &#125;,    &#123;        &quot;count&quot;: 48,        &quot;name&quot;: &quot;INTRUSION_ATTACK&quot;    &#125;]</code></pre><h5 id="返回参数说明"><a href="#返回参数说明" class="headerlink" title="返回参数说明"></a>返回参数说明</h5><table><thead><tr><th align="left">参数名</th><th align="left">类型</th><th>说明</th></tr></thead><tbody><tr><td align="left">groupid</td><td align="left">int</td><td>用户组id，1：超级管理员；2：普通用户</td></tr></tbody></table><h5 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h5><ul><li>更多返回错误代码请看首页的错误代码描述</li></ul>]]></content>
      
      
      <categories>
          
          <category> 接口 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>深信服上网认证</title>
      <link href="/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="1、每次重启电脑或者每天都会重定向到网络认证页面"><a href="#1、每次重启电脑或者每天都会重定向到网络认证页面" class="headerlink" title="1、每次重启电脑或者每天都会重定向到网络认证页面"></a>1、每次重启电脑或者每天都会重定向到网络认证页面</h3><pre class="language-none"><code class="language-none">http:&#x2F;&#x2F;1.1.1.3&#x2F;ac_portal&#x2F;disclaimer&#x2F;pc.html</code></pre><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094042221.png" alt="上网认证截图"></h3><h3 id="2、依赖安装"><a href="#2、依赖安装" class="headerlink" title="2、依赖安装"></a>2、依赖安装</h3><pre class="language-none"><code class="language-none">pip install requests -i https:&#x2F;&#x2F;pypi.doubanio.com&#x2F;simple</code></pre><h3 id="3、使用python脚本自动化认证网络"><a href="#3、使用python脚本自动化认证网络" class="headerlink" title="3、使用python脚本自动化认证网络"></a>3、使用python脚本自动化认证网络</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># @Time    : 2022/1/13 22:01</span><span class="token comment"># @Author  : CYX</span><span class="token comment"># @Email   : im.cyx@foxmail.com</span><span class="token comment"># @File    : login_network.py</span><span class="token comment"># @Software: PyCharm</span><span class="token keyword">import</span> msvcrt<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> json<span class="token keyword">import</span> os<span class="token comment"># 使cmd能够正确输出颜色</span><span class="token keyword">if</span> os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">"nt"</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment"># 切换工作目录</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">"C:\\Windows"</span><span class="token punctuation">)</span><span class="token comment"># 文件名称</span>file_name <span class="token operator">=</span> <span class="token string">"user_account.json"</span><span class="token comment"># 如果不存在临时文件，根据输入新建临时文件保存账号密码</span><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 输入账号密码</span>    account <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input your account: "</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input your password: "</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'account'</span><span class="token punctuation">:</span> account<span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> password    <span class="token punctuation">&#125;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token comment"># 写入json</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">"w+"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 如果存在，说明之前已经写入</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token comment"># 读取账号密码</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>        res <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        account <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'account'</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"X-Requested-With"</span><span class="token punctuation">:</span> <span class="token string">"XMLHttpRequest"</span><span class="token punctuation">,</span>        <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded; charset=UTF-8"</span><span class="token punctuation">,</span>     <span class="token comment"># 必须指定，否则报404</span>    <span class="token punctuation">&#125;</span><span class="token comment"># RC4加密算法</span><span class="token keyword">def</span> <span class="token function">do_encrypt_rc4</span><span class="token punctuation">(</span>src<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">,</span> passwd<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token builtin">str</span><span class="token punctuation">:</span>    i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>    key<span class="token punctuation">,</span> sbox <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    plen <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>    size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>    output <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 初始化密钥key和状态向量sbox</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        key<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>passwd<span class="token punctuation">[</span>i <span class="token operator">%</span> plen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        sbox<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment"># 状态向量打乱</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        temp <span class="token operator">=</span> sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sbox<span class="token punctuation">[</span>j<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token comment"># 秘钥流的生成与加密</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 子密钥生成</span>        a <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        b <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">+</span> sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        temp <span class="token operator">=</span> sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> temp        c <span class="token operator">=</span> <span class="token punctuation">(</span>sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        <span class="token comment"># 明文字节由子密钥异或加密</span>        temp <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> sbox<span class="token punctuation">[</span>c<span class="token punctuation">]</span>        <span class="token comment"># 密文字节转换成hex，格式对齐修正（取最后两位，若为一位（[0x0，0xF]），则改成[00, 0F]）</span>        temp <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span>        <span class="token comment"># 输出</span>        output <span class="token operator">+=</span> temp    <span class="token keyword">return</span> output<span class="token keyword">def</span> <span class="token function">auth_go</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 请求网址</span>    url <span class="token operator">=</span> <span class="token string">"http://1.1.1.3/ac_portal/login.php"</span>    <span class="token comment"># 请求头</span>    <span class="token comment"># headers = &#123;</span>    <span class="token comment">#     "X-Requested-With": "XMLHttpRequest",</span>    <span class="token comment">#     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",</span>    <span class="token comment">#     "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",     # 必须指定，否则报404</span>    <span class="token comment"># &#125;</span>    <span class="token comment"># 时间戳（提取ms单位）</span>    tag <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token comment"># 利用RC4加密算法获取基于时间戳的密码</span>    pwd <span class="token operator">=</span> do_encrypt_rc4<span class="token punctuation">(</span>password<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 账号、密码、时间戳写入payload报文</span>    payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"opr=pwdLogin&amp;userName=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>account<span class="token punctuation">&#125;</span></span><span class="token string">&amp;pwd=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>pwd<span class="token punctuation">&#125;</span></span><span class="token string">&amp;auth_tag=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>tag<span class="token punctuation">&#125;</span></span><span class="token string">&amp;rememberPwd=1"</span></span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token comment"># 提交登录</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>            <span class="token comment"># 输出登录结果</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> res<span class="token punctuation">.</span>text<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\033[7;32;47m</span><span class="token interpolation"><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> \033[0m"</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\033[7;31;47m</span><span class="token interpolation"><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> \033[0m"</span></span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;31;47m"</span><span class="token punctuation">,</span> <span class="token string">"Login fail! Make sure input true account info!"</span><span class="token punctuation">,</span> <span class="token string">"\033[0m"</span><span class="token punctuation">)</span>                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;36;47m"</span><span class="token punctuation">,</span> <span class="token string">"Already clear account file.\n Restart EXE and input again."</span><span class="token punctuation">,</span> <span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment">#print("Press any key to exit...")</span>            <span class="token comment"># 等待退出</span>            <span class="token comment">#if ord(msvcrt.getch()):</span>            <span class="token keyword">break</span>        <span class="token comment"># 如果请求出错，大概率网络未连</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token comment"># 提示</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;31;47m"</span><span class="token punctuation">,</span><span class="token string">"Login Error！\tMaybe you need link wifi first?"</span> <span class="token punctuation">,</span><span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment"># 输出err</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;33;40m"</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span><span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment"># # 按“R”再次执行脚本，按其它按键退出</span>            <span class="token comment"># print("Press 'R' to restart, or break...")</span>            <span class="token comment"># if ord(msvcrt.getch()) != 114:</span>            <span class="token comment">#     break</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">ping_check</span><span class="token punctuation">(</span>ip_or_host<span class="token punctuation">)</span><span class="token punctuation">:</span>    cmd <span class="token operator">=</span> <span class="token string">"ping %s -n 3 "</span> <span class="token operator">%</span> ip_or_host    a <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>    b <span class="token operator">=</span> a<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#print(b)</span>    <span class="token keyword">if</span> <span class="token string">"100% 丢失"</span> <span class="token keyword">in</span> b<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment"># res = requests.get("https://baidu.com/", headers=headers)</span>        <span class="token comment"># if res.status_code != 200:</span>        <span class="token comment">#     auth_go()</span>        res <span class="token operator">=</span> ping_check<span class="token punctuation">(</span><span class="token string">"1.2.4.8"</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> res<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"检测到网络断开，尝试认证网络！"</span><span class="token punctuation">)</span>            auth_go<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="4、安装pyinstaller库，打包成exe程序，将生成的auth-net-exe文件放入C-Windows目录"><a href="#4、安装pyinstaller库，打包成exe程序，将生成的auth-net-exe文件放入C-Windows目录" class="headerlink" title="4、安装pyinstaller库，打包成exe程序，将生成的auth_net.exe文件放入C:\Windows目录"></a>4、安装pyinstaller库，打包成exe程序，将生成的auth_net.exe文件放入C:\Windows目录</h3><pre class="language-none"><code class="language-none">pip install pyinstallerpyinstaller -F auth_net.py#生成dist&#x2F;auth_net.exe</code></pre><p>首次运行需要输入用户名密码进行认证，因此需要手动打开程序输入</p><p>后续脚本将账户信息保存配置文件到C:\Windows目录，后续不需要再重新输入认证信息（除非删除WindowsC:\Windows目录的配置文件user_account.json）</p><h3 id="5、创建Windows任务计划程序"><a href="#5、创建Windows任务计划程序" class="headerlink" title="5、创建Windows任务计划程序"></a>5、创建Windows任务计划程序</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094621278.png" alt="打开任务计划程序"></p><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626095237396.png" alt="添加任务计划程序并运行"></p><h3 id="6、程序运行结果，每次开机自启动"><a href="#6、程序运行结果，每次开机自启动" class="headerlink" title="6、程序运行结果，每次开机自启动"></a>6、程序运行结果，每次开机自启动</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094514131.png" alt="任务管理器"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
