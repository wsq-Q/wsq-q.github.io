<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深信服上网认证</title>
      <link href="/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="1、每次重启电脑或者每天都会重定向到网络认证页面"><a href="#1、每次重启电脑或者每天都会重定向到网络认证页面" class="headerlink" title="1、每次重启电脑或者每天都会重定向到网络认证页面"></a>1、每次重启电脑或者每天都会重定向到网络认证页面</h3><pre class="language-none"><code class="language-none">http:&#x2F;&#x2F;1.1.1.3&#x2F;ac_portal&#x2F;disclaimer&#x2F;pc.html</code></pre><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094042221.png" alt="上网认证截图"></h3><h3 id="2、依赖安装"><a href="#2、依赖安装" class="headerlink" title="2、依赖安装"></a>2、依赖安装</h3><pre class="language-none"><code class="language-none">pip install requests -i https:&#x2F;&#x2F;pypi.doubanio.com&#x2F;simple</code></pre><h3 id="3、使用python脚本自动化认证网络"><a href="#3、使用python脚本自动化认证网络" class="headerlink" title="3、使用python脚本自动化认证网络"></a>3、使用python脚本自动化认证网络</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># @Time    : 2022/1/13 22:01</span><span class="token comment"># @Author  : CYX</span><span class="token comment"># @Email   : im.cyx@foxmail.com</span><span class="token comment"># @File    : login_network.py</span><span class="token comment"># @Software: PyCharm</span><span class="token keyword">import</span> msvcrt<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> json<span class="token keyword">import</span> os<span class="token comment"># 使cmd能够正确输出颜色</span><span class="token keyword">if</span> os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">"nt"</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment"># 切换工作目录</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">"C:\\Windows"</span><span class="token punctuation">)</span><span class="token comment"># 文件名称</span>file_name <span class="token operator">=</span> <span class="token string">"user_account.json"</span><span class="token comment"># 如果不存在临时文件，根据输入新建临时文件保存账号密码</span><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 输入账号密码</span>    account <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input your account: "</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input your password: "</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'account'</span><span class="token punctuation">:</span> account<span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> password    <span class="token punctuation">&#125;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token comment"># 写入json</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">"w+"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 如果存在，说明之前已经写入</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token comment"># 读取账号密码</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">as</span> fp<span class="token punctuation">:</span>        res <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        account <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'account'</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"X-Requested-With"</span><span class="token punctuation">:</span> <span class="token string">"XMLHttpRequest"</span><span class="token punctuation">,</span>        <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36"</span><span class="token punctuation">,</span>        <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded; charset=UTF-8"</span><span class="token punctuation">,</span>     <span class="token comment"># 必须指定，否则报404</span>    <span class="token punctuation">&#125;</span><span class="token comment"># RC4加密算法</span><span class="token keyword">def</span> <span class="token function">do_encrypt_rc4</span><span class="token punctuation">(</span>src<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">,</span> passwd<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token builtin">str</span><span class="token punctuation">:</span>    i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>    key<span class="token punctuation">,</span> sbox <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    plen <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>    size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>    output <span class="token operator">=</span> <span class="token string">""</span>    <span class="token comment"># 初始化密钥key和状态向量sbox</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        key<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>passwd<span class="token punctuation">[</span>i <span class="token operator">%</span> plen<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        sbox<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment"># 状态向量打乱</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        temp <span class="token operator">=</span> sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sbox<span class="token punctuation">[</span>j<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token comment"># 秘钥流的生成与加密</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 子密钥生成</span>        a <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        b <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">+</span> sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        temp <span class="token operator">=</span> sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span>        sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> temp        c <span class="token operator">=</span> <span class="token punctuation">(</span>sbox<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> sbox<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        <span class="token comment"># 明文字节由子密钥异或加密</span>        temp <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> sbox<span class="token punctuation">[</span>c<span class="token punctuation">]</span>        <span class="token comment"># 密文字节转换成hex，格式对齐修正（取最后两位，若为一位（[0x0，0xF]），则改成[00, 0F]）</span>        temp <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span>        <span class="token comment"># 输出</span>        output <span class="token operator">+=</span> temp    <span class="token keyword">return</span> output<span class="token keyword">def</span> <span class="token function">auth_go</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 请求网址</span>    url <span class="token operator">=</span> <span class="token string">"http://1.1.1.3/ac_portal/login.php"</span>    <span class="token comment"># 请求头</span>    <span class="token comment"># headers = &#123;</span>    <span class="token comment">#     "X-Requested-With": "XMLHttpRequest",</span>    <span class="token comment">#     "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",</span>    <span class="token comment">#     "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8",     # 必须指定，否则报404</span>    <span class="token comment"># &#125;</span>    <span class="token comment"># 时间戳（提取ms单位）</span>    tag <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token comment"># 利用RC4加密算法获取基于时间戳的密码</span>    pwd <span class="token operator">=</span> do_encrypt_rc4<span class="token punctuation">(</span>password<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 账号、密码、时间戳写入payload报文</span>    payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"opr=pwdLogin&amp;userName=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>account<span class="token punctuation">&#125;</span></span><span class="token string">&amp;pwd=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>pwd<span class="token punctuation">&#125;</span></span><span class="token string">&amp;auth_tag=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>tag<span class="token punctuation">&#125;</span></span><span class="token string">&amp;rememberPwd=1"</span></span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token comment"># 提交登录</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>            <span class="token comment"># 输出登录结果</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> res<span class="token punctuation">.</span>text<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\033[7;32;47m</span><span class="token interpolation"><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> \033[0m"</span></span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\033[7;31;47m</span><span class="token interpolation"><span class="token punctuation">&#123;</span>res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> \033[0m"</span></span><span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;31;47m"</span><span class="token punctuation">,</span> <span class="token string">"Login fail! Make sure input true account info!"</span><span class="token punctuation">,</span> <span class="token string">"\033[0m"</span><span class="token punctuation">)</span>                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_name<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;36;47m"</span><span class="token punctuation">,</span> <span class="token string">"Already clear account file.\n Restart EXE and input again."</span><span class="token punctuation">,</span> <span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment">#print("Press any key to exit...")</span>            <span class="token comment"># 等待退出</span>            <span class="token comment">#if ord(msvcrt.getch()):</span>            <span class="token keyword">break</span>        <span class="token comment"># 如果请求出错，大概率网络未连</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>            <span class="token comment"># 提示</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;31;47m"</span><span class="token punctuation">,</span><span class="token string">"Login Error！\tMaybe you need link wifi first?"</span> <span class="token punctuation">,</span><span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment"># 输出err</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\033[7;33;40m"</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span><span class="token string">"\033[0m"</span><span class="token punctuation">)</span>            <span class="token comment"># # 按“R”再次执行脚本，按其它按键退出</span>            <span class="token comment"># print("Press 'R' to restart, or break...")</span>            <span class="token comment"># if ord(msvcrt.getch()) != 114:</span>            <span class="token comment">#     break</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">ping_check</span><span class="token punctuation">(</span>ip_or_host<span class="token punctuation">)</span><span class="token punctuation">:</span>    cmd <span class="token operator">=</span> <span class="token string">"ping %s -n 3 "</span> <span class="token operator">%</span> ip_or_host    a <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>    b <span class="token operator">=</span> a<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#print(b)</span>    <span class="token keyword">if</span> <span class="token string">"100% 丢失"</span> <span class="token keyword">in</span> b<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment"># res = requests.get("https://baidu.com/", headers=headers)</span>        <span class="token comment"># if res.status_code != 200:</span>        <span class="token comment">#     auth_go()</span>        res <span class="token operator">=</span> ping_check<span class="token punctuation">(</span><span class="token string">"1.2.4.8"</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> res<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"检测到网络断开，尝试认证网络！"</span><span class="token punctuation">)</span>            auth_go<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="4、安装pyinstaller库，打包成exe程序，将生成的auth-net-exe文件放入C-Windows目录"><a href="#4、安装pyinstaller库，打包成exe程序，将生成的auth-net-exe文件放入C-Windows目录" class="headerlink" title="4、安装pyinstaller库，打包成exe程序，将生成的auth_net.exe文件放入C:\Windows目录"></a>4、安装pyinstaller库，打包成exe程序，将生成的auth_net.exe文件放入C:\Windows目录</h3><pre class="language-none"><code class="language-none">pip install pyinstallerpyinstaller -F auth_net.py#生成dist&#x2F;auth_net.exe</code></pre><p>首次运行需要输入用户名密码进行认证，因此需要手动打开程序输入</p><p>后续脚本将账户信息保存配置文件到C:\Windows目录，后续不需要再重新输入认证信息（除非删除WindowsC:\Windows目录的配置文件user_account.json）</p><h3 id="5、创建Windows任务计划程序"><a href="#5、创建Windows任务计划程序" class="headerlink" title="5、创建Windows任务计划程序"></a>5、创建Windows任务计划程序</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094621278.png" alt="打开任务计划程序"></p><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626095237396.png" alt="添加任务计划程序并运行"></p><h3 id="6、程序运行结果，每次开机自启动"><a href="#6、程序运行结果，每次开机自启动" class="headerlink" title="6、程序运行结果，每次开机自启动"></a>6、程序运行结果，每次开机自启动</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094514131.png" alt="任务管理器"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>于你</title>
      <link href="/2024/05/14/test/"/>
      <url>/2024/05/14/test/</url>
      
        <content type="html"><![CDATA[<h2 id="亲爱的小清清："><a href="#亲爱的小清清：" class="headerlink" title="亲爱的小清清："></a>亲爱的小清清：</h2><h1 id="你好呀！"><a href="#你好呀！" class="headerlink" title="你好呀！"></a>你好呀！</h1><h3 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h3><p>​        你是我生命中最珍贵的宝藏，自从第一次遇见你，我的内心深处就震荡起了情愫的波澜。在你的光芒中，我发现了人生中的灿烂和美好，感谢生命的安排让我与你相遇。</p><h3 id="相互倾听"><a href="#相互倾听" class="headerlink" title="相互倾听"></a>相互倾听</h3><p>​        你总是耐心的倾听我的内心世界，不断地鼓励着我去找寻梦想的方向。我也向你倾诉着内心的欢喜与烦恼，从中我们之间的了解与信任逐渐深入。</p><h3 id="同度岁月"><a href="#同度岁月" class="headerlink" title="同度岁月"></a>同度岁月</h3><p>​        不管生活中经历着什么风风雨雨，我们都能扶着彼此的手走过一段又一段困难时刻。那些温暖的刻录，像是一首首恬静美丽的旋律，在我们的记忆中流淌。</p><h3 id="情感的领域"><a href="#情感的领域" class="headerlink" title="情感的领域"></a>情感的领域</h3><p>​        当我和你在一起的时候，总是充满着温暖与喜悦。你的微笑是我无尽的力量，让我意识到只有与你一起同在，才是我一生所愿。</p><p>我的爱人，感谢你在我人生中的出现，让我们坚定信心，共同迎接未来的美好生活吧。</p>]]></content>
      
      
      <categories>
          
          <category> zmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/2024/05/01/hello-world/"/>
      <url>/2024/05/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! 1This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="language-none"><code class="language-none">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server1"><a href="#Run-server1" class="headerlink" title="Run server1"></a>Run server1</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
